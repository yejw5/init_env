FROM ubuntu:20.04

WORKDIR /

RUN apt-get update -y

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    apt-utils \
    build-essential \
    curl \
    git \
    libcurl3-dev \
    pkg-config \
    rsync \
    software-properties-common \
    unzip \
    zip \
    openssh-server \
    openssh-client \
    wget \
    bsdmainutils \
    ccache \
    libssl-dev \
    less \
    sudo \
    gpg-agent \
    python3-dev \
    python3-pip

# Install cmake
ENV CMAKE_VERSION 3.22.1
RUN cd /tmp/ && \
    curl -OL https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz && \
    tar xf cmake-${CMAKE_VERSION}.tar.gz && cd cmake-${CMAKE_VERSION} && \
    ./bootstrap && make -j 16 && make install && \
    cd - && rm -rf /tmp/cmake-${CMAKE_VERSION}.tar.gz /tmp/cmake-${CMAKE_VERSION}

# Setup Python
RUN pip3 config --user set global.index http://mirrors.aliyun.com/pypi/simple
RUN pip3 config --user set global.index-url http://mirrors.aliyun.com/pypi/simple
RUN pip3 config --user set global.trusted-host mirrors.aliyun.com

RUN pip3 install clang-format==9.0.0

######################
# Install from scripts
######################
COPY installers docker/installers

RUN bash -x docker/installers/install_zsh.sh

# Should install zsh before vim
RUN bash -x docker/installers/install_vim.sh

RUN bash -x docker/installers/install_tmux.sh

# Install and set up Bazelisk
RUN bash -x docker/installers/install_bazelisk.sh
# Running bazel inside a `docker build` command causes trouble, cf:
#   https://github.com/bazelbuild/bazel/issues/134
# The easiest solution is to set up a bazelrc file forcing --batch.
RUN echo "startup --batch" >> /etc/bazel.bazelrc
# Similarly, we need to workaround sandboxing issues:
#   https://github.com/bazelbuild/bazel/issues/418
RUN echo "build --spawn_strategy=standalone --genrule_strategy=standalone" \
      >> /etc/bazel.bazelrc
ENV PATH="/opt/bazelisk:${PATH}"


